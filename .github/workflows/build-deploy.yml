name: "Build and deploy"

on:
  push:
    branches:
      - 'development'
      - 'master'
      - 'feature/*'
      - 'bugfix/*'
      - 'hotfix/*'
      - 'release/*'
    paths:
      - Function1.cs
      - .github/workflows/build-deploy.yml
      - .github/workflows/workflow-azure-functions-build-and-publish-steps.yml
      - .github/workflows/workflow-azure-functions-deployment-steps.yml

env:
  artifactsName: function-cicd-artifact
  vmImageName: 'windows-latest'
  buildConfiguration: 'Release'
  solutionFilePath: 'function-cicd.sln'
  artifactsPathPrefix: '.\artifacts'
  appDisplayName: 'Function CICD'

jobs:
  prepare_env_variables:
    name: "Prepare environment variables"
    runs-on: windows-latest
    outputs:
      solutionFilePath: ${{ steps.set_outputs.outputs.solutionFilePath }}
      buildConfiguration: ${{ steps.set_outputs.outputs.buildConfiguration }}
      artifactsName: ${{ steps.set_outputs.outputs.artifactsName }}
      artifactsPath: ${{ steps.set_outputs.outputs.artifactsPath }}
      appDisplayName: ${{ steps.set_outputs.outputs.appDisplayName }}
    steps:
      - name: "Set outputs"
        id: set_outputs
        shell: pwsh
        run: |
          echo "solutionFilePath=$env:solutionFilePath" >> $env:GITHUB_OUTPUT
          echo "buildConfiguration=$env:buildConfiguration" >> $env:GITHUB_OUTPUT
          echo "artifactsName=$env:artifactsName" >> $env:GITHUB_OUTPUT
          echo "artifactsPath=$env:artifactsPathPrefix-$env:GITHUB_RUN_NUMBER" >> $env:GITHUB_OUTPUT
          echo "appDisplayName=$env:appDisplayName" >> $env:GITHUB_OUTPUT
      - name: "Print outputs"
        shell: pwsh
        run: |
          Write-Host "solutionFilePath: ${{ steps.set_outputs.outputs.solutionFilePath }}"
          Write-Host "buildConfiguration: ${{ steps.set_outputs.outputs.buildConfiguration }}"
          Write-Host "artifactsName: ${{ steps.set_outputs.outputs.artifactsName }}"
          Write-Host "artifactsPath: ${{ steps.set_outputs.outputs.artifactsPath }}"
          Write-Host "appDisplayName: ${{ steps.set_outputs.outputs.appDisplayName }}"

  build:
    needs: [prepare_env_variables]
    name: "Build"
    uses: ./.github/workflows/workflow-azure-functions-build-and-publish-steps.yml
    with:
      appDisplayName: ${{ needs.prepare_env_variables.outputs.appDisplayName }}
      projectsOrSolution: ${{ needs.prepare_env_variables.outputs.solutionFilePath }}
      buildConfiguration: ${{ needs.prepare_env_variables.outputs.buildConfiguration }}
      artifacts: ${{ needs.prepare_env_variables.outputs.artifactsName }}
      artifactsPath: ${{ needs.prepare_env_variables.outputs.artifactsPath }}
      netSdkVersion: '6.x'

  deploy_to_development:
    if: github.ref == 'refs/heads/development'
    needs: [prepare_env_variables, build]
    name: "Deploy Commercial Support Functions to Development"
    uses: ./.github/workflows/workflow-azure-functions-deployment-steps.yml
    with:
      environment: commercial-1-support-functions-dev
      appDisplayName: ${{ needs.prepare_env_variables.outputs.appDisplayName }}
      artifacts: ${{ needs.prepare_env_variables.outputs.artifactsName }}
    secrets: inherit

  deploy_to_qa:
    if: github.ref == 'refs/heads/development'
    needs: [prepare_env_variables, build]
    name: "Deploy Commercial Support Functions to QA"
    uses: ./.github/workflows/workflow-azure-functions-deployment-steps.yml
    with:
      environment: commercial-1-support-functions-qa
      appDisplayName: ${{ needs.prepare_env_variables.outputs.appDisplayName }}
      artifacts: ${{ needs.prepare_env_variables.outputs.artifactsName }}
    secrets: inherit

  deploy_to_staging:
    if: startswith(github.ref, 'refs/heads/release/')
    needs: [prepare_env_variables, build]
    name: "Deploy Commercial Support Functions to Staging"
    uses: ./.github/workflows/workflow-azure-functions-deployment-steps.yml
    with:
      environment: commercial-1-support-functions-staging
      appDisplayName: ${{ needs.prepare_env_variables.outputs.appDisplayName }}
      artifacts: ${{ needs.prepare_env_variables.outputs.artifactsName }}
    secrets: inherit

  deploy_to_production:
    if: github.ref == 'refs/heads/master' || startswith(github.ref, 'refs/heads/hotfix/') || startswith(github.ref, 'refs/heads/release/')
    needs: [prepare_env_variables, build]
    name: "Deploy Commercial Support Functions to Production"
    uses: ./.github/workflows/workflow-azure-functions-deployment-steps.yml
    with:
      environment: commercial-1-support-functions-prod
      appDisplayName: ${{ needs.prepare_env_variables.outputs.appDisplayName }}
      artifacts: ${{ needs.prepare_env_variables.outputs.artifactsName }}
    secrets: inherit
